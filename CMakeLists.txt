CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
PROJECT (luasdl)
SET(MODNAME LuaSDL)

find_library(TOLUAPP51_LIB tolua++5.1)
if("TOLUAPP51_LIB-NOTFOUND" STREQUAL "${TOLUAPP51_LIB}")
  SET(TOLUA_EXE tolua++)
  SET(TOLUA_LIB tolua++)
else("TOLUAPP51_LIB-NOTFOUND" STREQUAL "${TOLUAPP51_LIB}")
  SET(TOLUA_EXE tolua++5.1)
  SET(TOLUA_LIB tolua++5.1)
endif("TOLUAPP51_LIB-NOTFOUND" STREQUAL "${TOLUAPP51_LIB}")


IF (WIN32)
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE)
ELSE (WIN32)
  INCLUDE_DIRECTORIES (${CMAKE_CURRENT_SOURCE_DIR} ~/local/include/ ~/local/include/SDL/ /usr/include/lua5.1/ /usr/include/SDL)
  LINK_DIRECTORIES(~/local/lib/)
  SET(CMAKE_C_FLAGS "-g -Wall -Werror -Wno-unknown-pragmas -Wstrict-prototypes -Wpointer-arith -Wno-char-subscripts")
ENDIF (WIN32)

MACRO(ADD_LUA_MODULE MODULE_NAME FILES)
  ADD_LIBRARY (${MODULE_NAME} SHARED ${FILES})
  SET_TARGET_PROPERTIES(${MODULE_NAME}
    PROPERTIES
      PREFIX ""
  )
ENDMACRO(ADD_LUA_MODULE)

MACRO(TOLUA_BINDING PKG OUTPUT FILES)
  ADD_CUSTOM_COMMAND(
    OUTPUT ${OUTPUT}
    DEPENDS ${FILES} ${PKG}
    COMMAND ${TOLUA_EXE}
    ARGS -o ${CMAKE_CURRENT_BINARY_DIR}/${OUTPUT} ${PKG}
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  )
ENDMACRO(TOLUA_BINDING)

## tolua++ modules

TOLUA_BINDING(foo.pkg foo.c bar.h)
SET(FOO_SRCS foo.c bar.c bar.h)
ADD_LUA_MODULE(foo "${FOO_SRCS}")
TARGET_LINK_LIBRARIES(foo ${TOLUA_LIB})
